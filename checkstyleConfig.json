{
    "checks": [
        {
                "type": "AccessOrder",
                "props": {
                        "severity": "WARNING",
                        "modifiers": [
                                "MACRO",
                                "OVERRIDE",
                                "PUBLIC_PRIVATE",
                                "STATIC",
                                "INLINE",
                                "DYNAMIC"
                        ]
                }
        },
        {
            "type": "Anonymous",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "ArrayInstantiation",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "AvoidStarImport",
            "props": {
                "severity": "WARNING",
                "allowStarImports": false,
                "allowStarUsing": false
            }
        },
        {
            "type": "BlockFormat",
            "props": {
                "severity": "ERROR",
                "option": "text"
            }
        },
        {
            "type": "ConstantName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z][A-Z0-9]*(_[A-Z0-9_]+)*$",
                "tokens": [ "INLINE" ]
            }
        },
        {
            "type": "ConstantName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": [ "NOTINLINE" ]
            }
        },
        {
            "type": "CyclomaticComplexity",
            "props": {
                "thresholds": [
                    {
                        "severity" : "WARNING",
                        "complexity" : 11
                    },
                    {
                        "severity" : "ERROR",
                        "complexity" : 21
                    }
                ]
            }
        },
        {
            "type": "Dynamic",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "EmptyLines",
            "props": {
                "severity": "INFO",
                "max": 1
            }
        },
        {
            "type": "ERegInstantiation",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "FileLength",
            "props": {
                "severity": "WARNING",
                "max": 1000
            }
        },
        {
            "type": "HexadecimalLiterals",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "HiddenField",
            "props": {
                "severity": "WARNING",
                "ignoreConstructorParameter": true,
                "ignoreSetter": true,
                "ignoreFormat": "^(main)$"
            }
        },
        {
            "type": "IndentationCharacter",
            "props": {
                "severity": "INFO",
                "character": "space"
            }
        },
        {
            "type": "LeftCurly",
            "props": {
                "severity": "ERROR",
                "option": "eol",
                "tokens": [
                            "TYPEDEF_DEF"
                ]
            }
        },
        {
            "type": "LeftCurly",
            "props": {
                "severity": "ERROR",
                "option": "nl",
                "tokens": [
                            "CLASS_DEF",
                            "ENUM_DEF",
                            "ABSTRACT_DEF",
                            "CLASS_DEF",
                            "INTERFACE_DEF",
                            "FUNCTION",
                            "FOR",
                            "IF",
                            "WHILE",
                            "SWITCH",
                            "TRY",
                            "CATCH"
                ]
            }
        },
        {
            "type": "LineLength",
            "props": {
                "severity": "ERROR",
                "max": 160
            }
        },
        {
            "type": "ListenerName",
            "props": {
                "severity": "ERROR",
                "listeners": [
                    "addEventListener",
                    "addListener",
                    "on",
                    "once"
                ]
            }
        },
        {
            "type": "MethodLength",
            "props": {
                "severity": "ERROR",
                "max": 150
            }
        },
        {
            "type": "MethodName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": []
            }
        },
        {
            "type": "MemberName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z][a-zA-Z0-9_]*$",
                "tokens": [ "ENUM" ]
            }
        },
        {
            "type": "MemberName",
            "props": {
                "severity": "ERROR",
                "format": "^(m_)?[a-zA-Z]+[a-zA-Z0-9_]*$",
                "tokens": [ "PUBLIC", "PRIVATE" ]
            }
        },
        {
            "type": "MemberName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": [ "TYPEDEF" ]
            }
        },
        {
            "type": "NeedBraces",
            "props": {
                "severity": "ERROR",
                "allowSingleLineStatement": false,
                "tokens": []
            }
        },
        {
            "type": "NestedForDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NestedIfDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NestedTryDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "ParameterName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": [ "ENUM" ]
            }
        },
        {
            "type": "ParameterNumber",
            "props": {
                "severity": "INFO",
                "max": 7,
                "ignoreOveriddenMethods":false
            }
        },
        {
            "type": "PublicPrivate",
            "props": {
                "severity": "INFO",
                "enforcePublicPrivate": true
            }
        },
        {
            "type": "Return",
            "props": {
                "severity": "INFO",
                "allowEmptyReturn": false,
                "enforceReturnType": true
            }
        },
        {
            "type": "RightCurly",
            "props": {
                "severity": "ERROR",
                "option": "aloneorsingle",
                "tokens": [
                            "OBJECT_DECL"
                ]
            }
        },
        {
            "type": "RightCurly",
            "props": {
                "severity": "ERROR",
                "option": "alone",
                "tokens": [
                            "CLASS_DEF",
                            "ENUM_DEF",
                            "ABSTRACT_DEF",
                            "CLASS_DEF",
                            "INTERFACE_DEF",
                            "FUNCTION",
                            "FOR",
                            "IF",
                            "WHILE",
                            "SWITCH",
                            "TRY",
                            "CATCH"
                ]
            }
        },
        {
            "type": "Spacing",
            "props": {
                "severity": "INFO",
                "spaceIfCondition": true,
                "spaceAroundBinop": true,
                "spaceAroundBinop": true,
                "ignoreRangeOperator": true
            }
        },
        {
            "type": "TabForAligning",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "TODOComment",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "TrailingWhitespace",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "Type",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "TypeName",
            "props": {
                "severity": "ERROR",
                "format": "^I[A-Z]+[a-zA-Z0-9_]*$",
                "tokens": [ "INTERFACE" ]
            }
        },
        {
            "type": "TypeName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z]+[a-zA-Z0-9_]*$",
                "tokens": [ "ENUM", "CLASS", "TYPEDEF" ]
            }
        },
        {
            "type": "VariableInitialisation",
            "props": {
                "severity": "WARNING"
            }
        }
    ]
}
