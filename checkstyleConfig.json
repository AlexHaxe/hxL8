{
    "checks": [
        {
            "type": "AccessOrder",
            "props": {
                "severity": "WARNING",
                "modifiers": [
                        "MACRO",
                        "OVERRIDE",
                        "PUBLIC_PRIVATE",
                        "STATIC",
                        "INLINE",
                        "DYNAMIC"
                ]
            }
        },
        {
            "type": "Anonymous",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "ArrayInstantiation",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "AvoidInlineConditionals",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "AvoidStarImport",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "ConditionalCompilation",
            "props": {
                "severity": "WARNING",
                "policy": "startOfLine",
                "allowSingleline": false
            }
        },
        {
            "type": "ConstantName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z][A-Z0-9]*(_[A-Z0-9_]+)*$",
                "tokens": [ "INLINE" ]
            }
        },
        {
            "type": "ConstantName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": [ "NOTINLINE" ]
            }
        },
        {
            "type": "CyclomaticComplexity",
            "props": {
                "thresholds": [
                    {
                        "severity" : "WARNING",
                        "complexity" : 11
                    },
                    {
                        "severity" : "ERROR",
                        "complexity" : 21
                    }
                ]
            }
        },
        {
            "type": "Dynamic",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "EmptyBlock",
            "props": {
                "severity": "WARNING",
                "option": "text",
                "tokens": [
                            "CLASS_DEF",
                            "ENUM_DEF",
                            "ABSTRACT_DEF",
                            "CLASS_DEF",
                            "INTERFACE_DEF",
                            "FUNCTION",
                            "FOR",
                            "IF",
                            "WHILE",
                            "SWITCH",
                            "TRY",
                            "CATCH"
                ]
            }
        },
        {
            "type": "EmptyLines",
            "props": {
                "severity": "INFO",
                "max": 1
            }
        },
        {
            "props": {
                "severity": "INFO"
            },
            "type": "EmptyPackage"
        },
        {
            "type": "ERegInstantiation",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "FileLength",
            "props": {
                "severity": "WARNING",
                "max": 1000
            }
        },
        {
            "type": "HexadecimalLiterals",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "HiddenField",
            "props": {
                "severity": "WARNING",
                "ignoreConstructorParameter": true,
                "ignoreSetter": true,
                "ignoreFormat": "^(main)$"
            }
        },
        {
            "type": "IndentationCharacter",
            "props": {
                "severity": "INFO",
                "character": "space"
            }
        },
        {
            "props": {
                "allowMarkerInterfaces": true,
                "severity": "INFO"
            },
            "type": "Interface"
        },
        {
            "type": "LeftCurly",
            "props": {
                "severity": "ERROR",
                "option": "eol",
                "tokens": [
                            "TYPEDEF_DEF"
                ]
            }
        },
        {
            "type": "LeftCurly",
            "props": {
                "severity": "ERROR",
                "option": "nl",
                "tokens": [
                            "CLASS_DEF",
                            "ENUM_DEF",
                            "ABSTRACT_DEF",
                            "CLASS_DEF",
                            "INTERFACE_DEF",
                            "FUNCTION",
                            "FOR",
                            "IF",
                            "WHILE",
                            "SWITCH",
                            "TRY",
                            "CATCH"
                ]
            }
        },
        {
            "type": "LineLength",
            "props": {
                "severity": "ERROR",
                "max": 160
            }
        },
        {
            "type": "ListenerName",
            "props": {
                "severity": "ERROR",
                "listeners": [
                    "addEventListener",
                    "addListener",
                    "on",
                    "once"
                ]
            }
        },
        {
            "type": "MethodLength",
            "props": {
                "severity": "ERROR",
                "max": 150
            }
        },
        {
            "type": "MethodName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": []
            }
        },
        {
            "type": "MemberName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z][a-zA-Z0-9_]*$",
                "tokens": [ "ENUM" ]
            }
        },
        {
            "type": "MemberName",
            "props": {
                "severity": "ERROR",
                "format": "^(m_)?[a-zA-Z]+[a-zA-Z0-9_]*$",
                "tokens": [ "CLASS", "ABSTRACT", "PUBLIC", "PRIVATE" ]
            }
        },
        {
            "type": "MemberName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": [ "TYPEDEF" ]
            }
        },
        {
            "type": "MultipleVariableDeclarations",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "NeedBraces",
            "props": {
                "severity": "ERROR",
                "allowSingleLineStatement": false,
                "tokens": []
            }
        },
        {
            "type": "NestedForDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NestedIfDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NestedTryDepth",
            "props": {
                "severity": "ERROR",
                "max": 1
            }
        },
        {
            "type": "NullableParameter",
            "props": {
                "severity": "IGNORE",
                "option": "questionMark"
            }
        },
        {
            "type": "OperatorWhitespace",
            "props": {
                "severity": "ERROR",
                "assignOpPolicy": "around",
                "unaryOpPolicy": "none",
                "ternaryOpPolicy": "around",
                "arithmeticOpPolicy": "around",
                "compareOpPolicy": "around",
                "bitwiseOpPolicy": "around",
                "boolOpPolicy": "around",
                "intervalOpPolicy": "none",
                "arrowPolicy": "around",
                "functionArgPolicy": "around"
            }
        },
        {
            "type": "OperatorWrap",
            "props": {
                "severity": "WARNING",
                "option": "eol",
                "tokens": [
                          "=",
                          "+",
                          "-",
                          "*",
                          "/",
                          "%",
                          ">",
                          "<",
                          ">=",
                          "<=",
                          "==",
                          "!=",
                          "&",
                          "|",
                          "^",
                          "&&",
                          "||",
                          "<<",
                          ">>",
                          ">>>",
                          "+=",
                          "-=",
                          "*=",
                          "/=",
                          "%=",
                          "<<=",
                          ">>=",
                          ">>>=",
                          "|=",
                          "&=",
                          "^=",
                          "...",
                          "=>",
                          "++",
                          "--"
                ]
            }
        },
        {
            "type": "OperatorWrap",
            "props": {
                "severity": "WARNING",
                "option": "nl",
                "tokens": [
                            "!"
                ]
            }
        },
        {
            "type": "ParameterName",
            "props": {
                "severity": "ERROR",
                "format": "^[a-z]+[a-zA-Z0-9_]*$",
                "tokens": [ "ENUM" ]
            }
        },
        {
            "type": "ParameterNumber",
            "props": {
                "severity": "INFO",
                "max": 7,
                "ignoreOverriddenMethods":false
            }
        },
        {
            "type": "PublicPrivate",
            "props": {
                "severity": "INFO",
                "enforcePublicPrivate": true
            }
        },
        {
            "props": {
                "enforcePublicPrivate": false,
                "severity": "IGNORE"
            },
            "type": "RedundantModifier"
        },
        {
            "type": "Return",
            "props": {
                "severity": "INFO",
                "allowEmptyReturn": false,
                "enforceReturnType": true
            }
        },
        {
            "props": {
                "max": 2,
                "severity": "IGNORE"
            },
            "type": "ReturnCount"
        },
        {
            "type": "RightCurly",
            "props": {
                "severity": "ERROR",
                "option": "aloneorsingle",
                "tokens": [
                            "OBJECT_DECL"
                ]
            }
        },
        {
            "type": "RightCurly",
            "props": {
                "severity": "ERROR",
                "option": "alone",
                "tokens": [
                            "CLASS_DEF",
                            "ENUM_DEF",
                            "ABSTRACT_DEF",
                            "CLASS_DEF",
                            "INTERFACE_DEF",
                            "FUNCTION",
                            "FOR",
                            "IF",
                            "WHILE",
                            "SWITCH",
                            "TRY",
                            "CATCH"
                ]
            }
        },
        {
            "type": "SeparatorWhitespace",
            "props": {
                "severity": "WARNING",
                "dotPolicy": "none",
                "commaPolicy": "after",
                "semicolonPolicy": "after"
            }
        },
        {
            "type": "SeparatorWrap",
            "props": {
                "severity": "WARNING",
                "option": "eol",
                "tokens": [
                            ","
                ]
            }
        },
        {
            "type": "SeparatorWrap",
            "props": {
                "severity": "WARNING",
                "option": "nl",
                "tokens": [
                            "."
                ]
            }
        },
        {
            "type": "Spacing",
            "props": {
                "severity": "INFO",
                "spaceIfCondition": true,
                "spaceAroundBinop": true,
                "noSpaceAroundUnop": true,
                "spaceForLoop": true,
                "spaceWhileLoop": true,
                "spaceSwitchCase": true,
                "ignoreRangeOperator": true
            }
        },
        {
            "type": "SimplifyBooleanExpression",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "props": {
                "severity": "INFO"
            },
            "type": "SimplifyBooleanReturn"
        },
        {
            "type": "TabForAligning",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "TODOComment",
            "props": {
                "severity": "INFO",
                "format": "TODO|FIXME|XXX"
            }
        },
        {
            "type": "Trace",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "TrailingWhitespace",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "Type",
            "props": {
                "severity": "ERROR"
            }
        },
        {
            "type": "TypeName",
            "props": {
                "severity": "ERROR",
                "format": "^I[A-Z]+[a-zA-Z0-9_]*$",
                "tokens": [ "INTERFACE" ]
            }
        },
        {
            "type": "TypeName",
            "props": {
                "severity": "ERROR",
                "format": "^[A-Z]+[a-zA-Z0-9_]*$",
                "tokens": [ "ENUM", "CLASS", "TYPEDEF" ]
            }
        },
        {
                "props": {
                        "severity": "WARNING"
                },
                "type": "UnnecessaryConstructor"
        },
        {
                "props": {
                        "severity": "INFO",
                        "ignoreModules": [
                          "haxe.macro.Expr",
                          "com.kewbee.config.AppConfig",
                          "com.kewbee.database.field.DBFieldTypes",
                          "com.kewbee.interfaces.ISiteID"
                        ]
                },
                "type": "UnusedImport"
        },
        {
            "type": "UnusedLocalVar",
            "props": {
                "severity": "INFO"
            }
        },
        {
            "type": "VariableInitialisation",
            "props": {
                "severity": "WARNING"
            }
        },
        {
            "type": "WhitespaceAfter",
            "props": {
                "severity": "WARNING",
                "tokens": [ ",", ";" ]
            }
        },
        {
            "type": "WhitespaceAround",
            "props": {
                "severity": "WARNING",
                "tokens": [ "=", "+", "-", "/", "*" ]
            }
        }
    ]
}
